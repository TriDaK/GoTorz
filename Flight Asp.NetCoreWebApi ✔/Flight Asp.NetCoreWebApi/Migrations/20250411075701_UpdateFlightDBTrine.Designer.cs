// <auto-generated />
using System;
using Flight_Asp.NetCoreWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flight_Asp.NetCoreWebApi.Migrations
{
    [DbContext(typeof(FlightDbContext))]
    [Migration("20250411075701_UpdateFlightDBTrine")]
    partial class UpdateFlightDBTrine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Flight_Asp.NetCoreWebApi.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AirportFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirportTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("DestinationFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeDeparture")
                        .HasColumnType("datetime2");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirportFrom = "OSL",
                            AirportTo = "CDG",
                            AvailableSeats = 150,
                            DestinationFrom = "Oslo",
                            DestinationTo = "Paris",
                            FlightNumber = "1234",
                            FlightStatus = "On Time",
                            TimeArrival = new DateTime(2024, 3, 25, 22, 45, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2024, 3, 25, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            price = 200
                        },
                        new
                        {
                            Id = 2,
                            AirportFrom = "LHR",
                            AirportTo = "BER",
                            AvailableSeats = 120,
                            DestinationFrom = "London",
                            DestinationTo = "Berlin",
                            FlightNumber = "5678",
                            FlightStatus = "Delayed",
                            TimeArrival = new DateTime(2024, 3, 25, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2024, 3, 25, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            price = 180
                        },
                        new
                        {
                            Id = 3,
                            AirportFrom = "MAD",
                            AirportTo = "FCO",
                            AvailableSeats = 100,
                            DestinationFrom = "Madrid",
                            DestinationTo = "Rome",
                            FlightNumber = "9101",
                            FlightStatus = "Cancelled",
                            TimeArrival = new DateTime(2024, 3, 26, 0, 15, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2024, 3, 25, 18, 15, 0, 0, DateTimeKind.Unspecified),
                            price = 150
                        },
                        new
                        {
                            Id = 4,
                            AirportFrom = "BGO",
                            AirportTo = "OSL",
                            AvailableSeats = 130,
                            DestinationFrom = "Bergen",
                            DestinationTo = "Oslo",
                            FlightNumber = "1121",
                            FlightStatus = "Arrived",
                            TimeArrival = new DateTime(2024, 3, 26, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2024, 3, 25, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 170
                        },
                        new
                        {
                            Id = 5,
                            AirportFrom = "CDG",
                            AirportTo = "LHR",
                            AvailableSeats = 140,
                            DestinationFrom = "Paris",
                            DestinationTo = "London",
                            FlightNumber = "3141",
                            FlightStatus = "On Time",
                            TimeArrival = new DateTime(2024, 3, 26, 2, 30, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2024, 3, 25, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            price = 190
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
