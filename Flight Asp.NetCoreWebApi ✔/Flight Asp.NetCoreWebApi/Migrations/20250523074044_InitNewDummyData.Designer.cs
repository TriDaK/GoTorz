// <auto-generated />
using System;
using Flight_Asp.NetCoreWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flight_Asp.NetCoreWebApi.Migrations
{
    [DbContext(typeof(FlightDbContext))]
    [Migration("20250523074044_InitNewDummyData")]
    partial class InitNewDummyData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Flight_Asp.NetCoreWebApi.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AirportFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirportTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("DestinationFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeDeparture")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirportFrom = "BLL",
                            AirportTo = "BER",
                            AvailableSeats = 80,
                            DestinationFrom = "Billund",
                            DestinationTo = "Berlin",
                            FlightNumber = "SK1234",
                            FlightStatus = "Scheduled",
                            Price = 750,
                            TimeArrival = new DateTime(2025, 6, 1, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AirportFrom = "BLL",
                            AirportTo = "BER",
                            AvailableSeats = 65,
                            DestinationFrom = "Billund",
                            DestinationTo = "Berlin",
                            FlightNumber = "LH5678",
                            FlightStatus = "Scheduled",
                            Price = 790,
                            TimeArrival = new DateTime(2025, 6, 1, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AirportFrom = "BLL",
                            AirportTo = "LHR",
                            AvailableSeats = 72,
                            DestinationFrom = "Billund",
                            DestinationTo = "London",
                            FlightNumber = "BA4321",
                            FlightStatus = "Scheduled",
                            Price = 950,
                            TimeArrival = new DateTime(2025, 6, 1, 10, 50, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 1, 9, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AirportFrom = "BLL",
                            AirportTo = "LHR",
                            AvailableSeats = 90,
                            DestinationFrom = "Billund",
                            DestinationTo = "London",
                            FlightNumber = "DY7654",
                            FlightStatus = "Scheduled",
                            Price = 910,
                            TimeArrival = new DateTime(2025, 6, 1, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 1, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AirportFrom = "BLL",
                            AirportTo = "CDG",
                            AvailableSeats = 85,
                            DestinationFrom = "Billund",
                            DestinationTo = "Paris",
                            FlightNumber = "AF2468",
                            FlightStatus = "Scheduled",
                            Price = 870,
                            TimeArrival = new DateTime(2025, 6, 1, 9, 25, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 1, 7, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AirportFrom = "BLL",
                            AirportTo = "CDG",
                            AvailableSeats = 60,
                            DestinationFrom = "Billund",
                            DestinationTo = "Paris",
                            FlightNumber = "SK1357",
                            FlightStatus = "Scheduled",
                            Price = 890,
                            TimeArrival = new DateTime(2025, 6, 1, 17, 40, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 1, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AirportFrom = "BER",
                            AirportTo = "BLL",
                            AvailableSeats = 70,
                            DestinationFrom = "Berlin",
                            DestinationTo = "Billund",
                            FlightNumber = "SK4321",
                            FlightStatus = "Scheduled",
                            Price = 770,
                            TimeArrival = new DateTime(2025, 6, 8, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 8, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AirportFrom = "BER",
                            AirportTo = "BLL",
                            AvailableSeats = 66,
                            DestinationFrom = "Berlin",
                            DestinationTo = "Billund",
                            FlightNumber = "LH8765",
                            FlightStatus = "Scheduled",
                            Price = 800,
                            TimeArrival = new DateTime(2025, 6, 8, 21, 15, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 8, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AirportFrom = "LHR",
                            AirportTo = "BLL",
                            AvailableSeats = 77,
                            DestinationFrom = "London",
                            DestinationTo = "Billund",
                            FlightNumber = "BA8765",
                            FlightStatus = "Scheduled",
                            Price = 970,
                            TimeArrival = new DateTime(2025, 6, 8, 12, 20, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 8, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AirportFrom = "LHR",
                            AirportTo = "BLL",
                            AvailableSeats = 92,
                            DestinationFrom = "London",
                            DestinationTo = "Billund",
                            FlightNumber = "DY4321",
                            FlightStatus = "Scheduled",
                            Price = 940,
                            TimeArrival = new DateTime(2025, 6, 8, 20, 20, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 8, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AirportFrom = "CDG",
                            AirportTo = "BLL",
                            AvailableSeats = 82,
                            DestinationFrom = "Paris",
                            DestinationTo = "Billund",
                            FlightNumber = "AF8642",
                            FlightStatus = "Scheduled",
                            Price = 880,
                            TimeArrival = new DateTime(2025, 6, 8, 10, 10, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 8, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AirportFrom = "CDG",
                            AirportTo = "BLL",
                            AvailableSeats = 69,
                            DestinationFrom = "Paris",
                            DestinationTo = "Billund",
                            FlightNumber = "SK7531",
                            FlightStatus = "Scheduled",
                            Price = 900,
                            TimeArrival = new DateTime(2025, 6, 8, 19, 40, 0, 0, DateTimeKind.Unspecified),
                            TimeDeparture = new DateTime(2025, 6, 8, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
