@page "/flightsearch"
@using Gotorz.Models
@using Gotorz.Services
@rendermode InteractiveServer

@inject FlightService FlightService
@inject HotelService HotelService
@inject TravelPackageService TravelPackageService

<h3>Search for Flights</h3>

@*Flight search fields*@
<input @bind="from" placeholder="From" />
<input @bind="to" placeholder="To" />
<input @bind="outboundDate" type="date" />
<input @bind="returnDate" type="date" />
<br />
<br />
@*Flight search button*@
<button @onclick="SearchFlights">Search</button>
@*List of flights*@
<br />
<br />
<h3>Outbound flights: </h3>
<table>
    <thead>
        <tr>
            <th>Destination From</th>
            <th>Destination To</th>
            <th>Departure Date</th>
            <th>Departure Time</th>
            <th>Arrival Date</th>
            <th>Arrival Time</th>
            <th>Flight Number</th>
            <th>Select</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var flight in outboundFlights)
        {
            <tr>
                <td>@flight.DestinationFrom</td>
                <td>@flight.DestinationTo</td>
                <td>@flight.TimeDeparture.ToString("dd-MM-yyyy")</td>
                <td>@flight.TimeDeparture.ToString("HH:mm")</td>
                <td>@flight.TimeArrival.ToString("dd-MM-yyyy")</td>
                <td>@flight.TimeArrival.ToString("HH:mm")</td>
                <td>@flight.FlightNumber</td>
                <td><input type="radio" @bind="flight.IsSelected" @onclick="@(() => SelectFlight(flight))" /></td>
            </tr>
        }
    </tbody>
</table>
<br />
<h3>Return flights: </h3>
<table>
    <thead>
        <tr>
            <th>Destination From</th>
            <th>Destination To</th>
            <th>Departure Date</th>
            <th>Departure Time</th>
            <th>Arrival Date</th>
            <th>Arrival Time</th>
            <th>Flight Number</th>
            <th>Select</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var flight in returnFlights)
        {
            <tr>
                <td>@flight.DestinationFrom</td>
                <td>@flight.DestinationTo</td>
                <td>@flight.TimeDeparture.ToString("dd-MM-yyyy")</td>
                <td>@flight.TimeDeparture.ToString("HH:mm")</td>
                <td>@flight.TimeArrival.ToString("dd-MM-yyyy")</td>
                <td>@flight.TimeArrival.ToString("HH:mm")</td>
                <td>@flight.FlightNumber</td>
                <td><input type="radio" @bind="flight.IsSelected" @onclick="@(() => SelectFlight(flight))" /></td>
            </tr>
        }
    </tbody>
</table>

<h3>Search for Hotels</h3>

@*Hotel search fields*@
<input @bind="hotelCity" placeholder="City" />
<input @bind="hotelCheckInDate" type="date" />
<input @bind="hotelCheckOutDate" type="date" />
<input @bind="hotelRating" type="number" placeholder="Rating" step="0.1" min="0" max="5" />
<input @bind="hotelCapacity" type="number" placeholder="Capacity" />
<input @bind="hotelRoomType" placeholder="Room Type" />
<br />
<br />
@*Hotel search button*@
<button @onclick="SearchHotels">Search Hotels</button>

@*List of hotels*@
<br />
<br />
<h3>Hotel Options: </h3>
<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Address</th>
            <th>Check-In Date</th>
            <th>Check-Out Date</th>
            <th>Rating</th>
            <th>Price</th>
            <th>Select</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var hotel in hotels)
        {
            <tr>
                <td>@hotel.Name</td>
                <td>@hotel.StreetName @hotel.StreetNo, @hotel.Zipcode @hotel.City, @hotel.Country</td>
                <td>@hotel.CheckIn.ToString("dd-MM-yyyy")</td>
                <td>@hotel.CheckOut.ToString("dd-MM-yyyy")</td>
                <td>@hotel.Rating</td>
                <td>@hotel.Price</td>
                <td><input type="radio" @bind="hotel.IsSelected" @onclick="@(() => SelectHotel(hotel))" /></td>
            </tr>
        }
    </tbody>
</table>

@*Create Travel Package*@
<br />
<br />
<button @onclick="CreateTravelPackage">Create Travel Package</button>

@*Travel Package*@
<br />
<br />
<h3>Travel Package: </h3>
<table>
    <thead>
        <tr>
            <th>Flight Number</th>
            <th>Hotel Name</th>
            <th>Total Price</th>
        </tr>
    </thead>
    <tbody>
        @if (travelPackage != null)
        {
            <tr>
                <td>@travelPackage.SelectedFlight.FlightNumber</td>
                <td>@travelPackage.SelectedHotel.Name</td>
                <td>@travelPackage.TotalPrice</td>
            </tr>
        }
    </tbody>
</table>

@code {
    // for flight search
    private string from = null;
    private string to = null;
    private DateTime? outboundDate = null;
    private DateTime? returnDate = null;
    private List<Flight> outboundFlights = new();
    private List<Flight> returnFlights = new();
    private Flight selectedFlight = null;

    private async Task SearchFlights()
    {
        outboundFlights = await FlightService.SearchFlightsAsync(from, to, outboundDate);
        returnFlights = await FlightService.SearchFlightsAsync(to, from, returnDate);
    }

    private void SelectFlight(Flight flight)
    {
        selectedFlight = flight;
    }

    // for hotel search
    private string hotelCity = null;
    private DateTime? hotelCheckInDate = null;
    private DateTime? hotelCheckOutDate = null;
    private double? hotelRating = null;
    private int? hotelCapacity = null;
    private string hotelRoomType = null;
    private List<Hotel> hotels = new();
    private Hotel selectedHotel = null;

    private async Task SearchHotels()
    {
        hotels = await HotelService.SearchHotelsAsync(
            hotelCity,
            hotelCheckInDate,
            hotelCheckOutDate,
            hotelRating,
            hotelCapacity,
            hotelRoomType);
    }

    private void SelectHotel(Hotel hotel)
    {
        selectedHotel = hotel;
    }

    // for travel package
    private TravelPackage travelPackage = null;

    private void CreateTravelPackage()
    {
        if (selectedFlight != null && selectedHotel != null)
        {
            travelPackage = TravelPackageService.CreateTravelPackage(selectedFlight, selectedHotel);
        }
    }
}
